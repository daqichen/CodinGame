# Codin Game: Chuck Norris

# Binary with 0 and 1 is good, but binary with only 0, or almost, is even better! Originally, this is a concept designed by Chuck Norris to send so called unary messages.

# 0 0 (the first series consists of only a single 1)
# 00 0000 (the second series consists of four 0)
# 0 00 (the third consists of two 1)
# So C is coded as: 0 0 00 0000 0 00

 
# Second example, we want to encode the message CC (i.e. the 14 bits 10000111000011) :

# 0 0 (one single 1)
# 00 0000 (four 0)
# 0 000 (three 1)
# 00 0000 (four 0)
# 0 00 (two 1)
# So CC is coded as: 0 0 00 0000 0 000 00 0000 0 00

import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.

message = input()
answer = ""
previous = -1

for i in range(len(message)):
    for j in range(6,-1,-1):
        current = ord(message.__getitem__(i)) >> j & 1
        if current != previous:
            if previous != -1:
                answer += " "
            if current == 1:
                answer += "0 "
                #previous = current
            elif current == 0:
                answer += "00 "
            previous = current
        answer += "0"

print(answer)